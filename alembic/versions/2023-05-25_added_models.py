"""added_models

Revision ID: 2a6fa26476b5
Revises: 
Create Date: 2023-05-25 02:30:06.363180

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "2a6fa26476b5"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "product",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("owner_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("brand", sa.String(), nullable=True),
        sa.Column("is_public", sa.Boolean(), nullable=True),
        sa.Column("material", sa.String(), nullable=True),
        sa.Column("style", sa.String(), nullable=True),
        sa.Column("pattern", sa.String(), nullable=True),
        sa.Column("shop_id", sa.BigInteger(), nullable=True),
        sa.Column("original_url", sa.String(), nullable=True),
        sa.Column("shopee_affiliate_url", sa.String(), nullable=True),
        sa.Column("lazada_affiliate_url", sa.String(), nullable=True),
        sa.Column("tiktok_affiliate_url", sa.String(), nullable=True),
        sa.Column("transparent_background_image", sa.String(), nullable=True),
        sa.Column("image_urls", sa.ARRAY(sa.String()), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["user.id"],
            name=op.f("product_owner_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("product_pkey")),
    )
    op.create_index(op.f("product_owner_id_idx"), "product", ["owner_id"], unique=False)
    op.create_table(
        "closet_item",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("closet_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("product_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["closet_id"],
            ["closet.id"],
            name=op.f("closet_item_closet_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
            name=op.f("closet_item_product_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("closet_item_pkey")),
        sa.UniqueConstraint(
            "closet_id", "product_id", name=op.f("closet_item_closet_id_key")
        ),
    )
    op.create_index(
        op.f("closet_item_closet_id_idx"), "closet_item", ["closet_id"], unique=False
    )
    op.create_table(
        "product_category",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("product_id", sa.BigInteger(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
            name=op.f("product_category_category_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
            name=op.f("product_category_product_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("product_category_pkey")),
    )
    op.create_index(
        op.f("product_category_category_id_idx"),
        "product_category",
        ["category_id"],
        unique=False,
    )
    op.create_index(
        op.f("product_category_product_id_idx"),
        "product_category",
        ["product_id"],
        unique=False,
    )
    op.create_table(
        "product_rating",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("product_id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
            name=op.f("product_rating_product_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("product_rating_user_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("product_rating_pkey")),
    )
    op.create_index(
        op.f("product_rating_product_id_idx"),
        "product_rating",
        ["product_id"],
        unique=False,
    )
    op.create_index(
        op.f("product_rating_user_id_idx"), "product_rating", ["user_id"], unique=False
    )
    op.create_table(
        "product_review",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("product_id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("content", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
            name=op.f("product_review_product_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("product_review_user_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("product_review_pkey")),
    )
    op.create_index(
        op.f("product_review_product_id_idx"),
        "product_review",
        ["product_id"],
        unique=False,
    )
    op.create_index(
        op.f("product_review_user_id_idx"), "product_review", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("product_review_user_id_idx"), table_name="product_review")
    op.drop_index(op.f("product_review_product_id_idx"), table_name="product_review")
    op.drop_table("product_review")
    op.drop_index(op.f("product_rating_user_id_idx"), table_name="product_rating")
    op.drop_index(op.f("product_rating_product_id_idx"), table_name="product_rating")
    op.drop_table("product_rating")
    op.drop_index(
        op.f("product_category_product_id_idx"), table_name="product_category"
    )
    op.drop_index(
        op.f("product_category_category_id_idx"), table_name="product_category"
    )
    op.drop_table("product_category")
    op.drop_index(op.f("closet_item_closet_id_idx"), table_name="closet_item")
    op.drop_table("closet_item")
    op.drop_index(op.f("product_owner_id_idx"), table_name="product")
    op.drop_table("product")
    # ### end Alembic commands ###
